version: '3.4'

services:
# Infrastructure services
  mongo.db:
    container_name: mongo-db
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: imroot

  mongo.explorer:
    container_name: mongo-gui
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:imroot@mongo.db:27017/

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest    
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest    
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    container_name: kafka-gui
    image: obsidiandynamics/kafdrop:latest    
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092  

# Our own services
  treinapp.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ConnectionStrings__MongoDb=mongodb://root:imroot@mongo.db:27017/
      - ConnectionStrings__KafkaBootstrap=kafka:29092
    ports:
      - "5000:80"
      - "5001:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
  
  treinapp.reports.worker:
    ports:
      - "7777:7777"
    environment:
      - ConnectionStrings__MongoDb=mongodb://root:imroot@mongo.db:27017/
      - ConnectionStrings__KafkaBootstrap=kafka:29092
      - HeartbeatConfiguration__TcpPort=7777
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

  treinapp.reports.portal:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ConnectionStrings__TreinappApi=http://treinapp.api
      - ConnectionStrings__TreinappReports=http://treinapp.reports.api
    ports:
      - "5010:80"
      - "5011:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  treinapp.reports.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ConnectionStrings__MongoDb=mongodb://root:imroot@mongo.db:27017/
    ports:
      - "5020:80"
      - "5021:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro  
  
  treinapp.spammer:  
    image: ${DOCKER_REGISTRY-}treinappspammer
    ports:
        - "6666:6666"
    build:
      context: .
      dockerfile: src/Treinapp.Spammer/Dockerfile
    environment:
      - ConnectionStrings__TreinappApi=http://treinapp.api
      - HeartbeatConfiguration__TcpPort=6666
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
